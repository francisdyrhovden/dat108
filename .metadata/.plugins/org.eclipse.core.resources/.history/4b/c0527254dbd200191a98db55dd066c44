package no.hvl.dat108;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Oppg4 {

	public static void main(String[] args) {

		List<Ansatt> ansatte = Arrays.asList(
				new Ansatt("Francis", "Dyrhovden", Kjonn.MANN, "sjef", 1000000),
				new Ansatt("Julie", "Schnell", Kjonn.KVINNE, "Vaskehjelp", 10000),
				new Ansatt("Lasse", "Hansen", Kjonn.MANN, "avdelingssjef", 500000),
				new Ansatt("Bjørnar", "Espeland", Kjonn.MANN, "Vaktmester", 200000),
				new Ansatt("Vilde", "Fossum", Kjonn.KVINNE, "Assistent", 150000)
				);
		
		//Ny liste med etternavn
		List<String> etternavnene = ansatte.stream()
									.map(a -> a.getEtternavn())
									.collect(Collectors.toList());
		System.out.println(etternavnene);
		
		
		//Antall kvinner
		long antKvinner = ansatte.stream()
						.filter(a -> a.getKjonn() == Kjonn.KVINNE)
						.count();
		System.out.println(antKvinner);
		
		
		//Gjennomsnittslønn til kvinner
		int gjsnittKvinner =  ansatte.stream()
								.filter(a -> a.getKjonn() == Kjonn.KVINNE)
								.map(a -> a.getAarslonn())
								.reduce(0,(sum, a) -> (sum += a)) / Math.toIntExact(antKvinner);
		System.out.println(gjsnittKvinner);
		
		
		
		//Alle sjefer får lønnsøkning på 7%
		List<Ansatt> sjefer = ansatte.stream()
								.filter(a -> a.getStilling().contains("sjef"))
								.collect(Collectors.toList());
		sjefer.stream().forEach(a -> a.setAarslonn((a.getAarslonn() * 7) / 100));
		System.out.println(sjefer);
		
		
		
//		lonnsoppgjor(ansatte, a -> {
//			a.setAarslonn(a.getAarslonn() + (fastProsent * a.getAarslonn()) / 100);
//			return a.getAarslonn();
//		});
	}						
	
	

}
